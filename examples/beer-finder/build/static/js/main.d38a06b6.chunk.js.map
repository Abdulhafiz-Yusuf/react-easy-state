{"version":3,"sources":["api.js","appStore.js","NavBar.jsx","Beer.jsx","BeerList.jsx","index.js","App.jsx"],"names":["ITEMS_PER_PAGE","api","axios","create","baseURL","fetchBeers","_x","api_fetchBeers","apply","this","arguments","_callee","filter","_ref","data","regenerator_default","a","wrap","_context","prev","next","get","params","food","undefined","per_page","sent","forEach","fillImage","abrupt","stop","beer","image_url","indexOf","appStore","store","beers","_fetchBeers","Object","asyncToGenerator","mark","isLoading","view","react_default","createElement","className","lib_default","onRequestSearch","placeholder","LinearProgress_default","Beer","details","toggleDetails","_this","_this$props","props","name","imageUrl","foodPairing","food_pairing","description","Card_default","onClick","CardMedia_default","image","CardContent_default","map","key","Component","length","src_Beer","assign","ReactDOM","render","react","NavBar","BeerList","document","getElementById"],"mappings":"yRAEMA,EAAiB,GAEjBC,SAAMC,EAAMC,OAAO,CACvBC,QAAS,+BAGJ,SAAeC,EAAtBC,GAAA,OAAAC,EAAAC,MAAAC,KAAAC,sDAAO,SAAAC,EAA2BC,GAA3B,IAAAC,EAAAC,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACkBnB,EAAIoB,IAAI,SAAU,CACvCC,OAAQ,CACNC,KAAMX,QAAUY,EAChBC,SAAUzB,KAJT,cAAAa,EAAAK,EAAAQ,MACGZ,EADHD,EACGC,MAMHa,QAAQC,GAPRV,EAAAW,OAAA,SAQEf,GARF,wBAAAI,EAAAY,SAAAnB,EAAAF,gCAWP,SAASmB,EAAWG,GACbA,EAAKC,YAAoD,IAAvCD,EAAKC,UAAUC,QAAQ,aAC5CF,EAAKC,UACH,wGClBN,IAAME,EAAWC,YAAM,CACrBC,MAAO,GACD/B,WAFe,eAAAgC,EAAAC,OAAAC,EAAA,EAAAD,CAAAvB,EAAAC,EAAAwB,KAAA,SAAA7B,EAEHC,GAFG,OAAAG,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAGnBc,EAASO,WAAY,EAHFvB,EAAAE,KAAA,EAIInB,EAAeW,GAJnB,OAInBsB,EAASE,MAJUlB,EAAAQ,KAKnBQ,EAASO,WAAY,EALF,wBAAAvB,EAAAY,SAAAnB,EAAAF,SAAA,gBAAAH,GAAA,OAAA+B,EAAA7B,MAAAC,KAAAC,YAAA,KASRwB,ICPAQ,cAAK,kBAClBC,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,aACbF,EAAA3B,EAAA4B,cAACE,EAAA9B,EAAD,CACE+B,gBAAiBb,EAAS7B,WAC1B2C,YAAY,sBAEbd,EAASO,WAAaE,EAAA3B,EAAA4B,cAACK,EAAAjC,EAAD,sGCNrBkC,6MACJf,MAAQA,YAAM,CAAEgB,SAAS,MAEzBC,cAAgB,kBAAOC,EAAKlB,MAAMgB,SAAWE,EAAKlB,MAAMgB,iFAE9C,IAAAG,EAMJ7C,KAAK8C,MAJPC,EAFMF,EAENE,KACWC,EAHLH,EAGNtB,UACc0B,EAJRJ,EAINK,aACAC,EALMN,EAKNM,YAEMT,EAAY1C,KAAK0B,MAAjBgB,QAER,OACER,EAAA3B,EAAA4B,cAACiB,EAAA7C,EAAD,CAAM8C,QAASrD,KAAK2C,cAAeP,UAAU,SACzCM,GAAWR,EAAA3B,EAAA4B,cAACmB,EAAA/C,EAAD,CAAWgD,MAAOP,EAAUZ,UAAU,UACnDF,EAAA3B,EAAA4B,cAACqB,EAAAjD,EAAD,KACE2B,EAAA3B,EAAA4B,cAAA,UAAKY,GACJL,EACCR,EAAA3B,EAAA4B,cAAA,SAAIgB,GAEJjB,EAAA3B,EAAA4B,cAAA,UAAKc,EAAYQ,IAAI,SAAA3C,GAAI,OAAIoB,EAAA3B,EAAA4B,cAAA,MAAIuB,IAAK5C,GAAOA,eAtBtC6C,aA8BJ1B,cAAKQ,GC/BLR,cAAK,kBAClBC,EAAA3B,EAAA4B,cAAA,OAAKC,UAAU,YACXX,EAASE,MAAMiC,OAGfnC,EAASE,MAAM8B,IAAI,SAAAnC,GAAI,OAAIY,EAAA3B,EAAA4B,cAAC0B,EAADhC,OAAAiC,OAAA,CAAMJ,IAAKpC,EAAKyB,MAAUzB,MAFrDY,EAAA3B,EAAA4B,cAAA,yCCHN4B,IAASC,OAAO9B,EAAA3B,EAAA4B,cCChB,WAAe,OACbD,EAAA3B,EAAA4B,cAAC8B,EAAA,SAAD,KACE/B,EAAA3B,EAAA4B,cAAC+B,EAAD,MACAhC,EAAA3B,EAAA4B,cAACgC,EAAD,QDJY,MAASC,SAASC,eAAe","file":"static/js/main.d38a06b6.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst ITEMS_PER_PAGE = 30\n\nconst api = axios.create({\n  baseURL: 'https://api.punkapi.com/v2'\n})\n\nexport async function fetchBeers (filter) {\n  const { data } = await api.get('/beers', {\n    params: {\n      food: filter || undefined,\n      per_page: ITEMS_PER_PAGE\n    }\n  })\n  data.forEach(fillImage)\n  return data\n}\n\nfunction fillImage (beer) {\n  if (!beer.image_url || beer.image_url.indexOf('keg.png') !== -1) {\n    beer.image_url =\n      'http://www.patternpictures.com/wp-content/uploads/2015/11/PP07301706-Close-up-of-draft-beer-foam.jpg'\n  }\n}\n","import { store } from 'react-easy-state'\nimport * as api from './api'\n\n// use 'appStore' instead of 'this' in the store methods to make them passable as callbacks\nconst appStore = store({\n  beers: [],\n  async fetchBeers (filter) {\n    appStore.isLoading = true\n    appStore.beers = await api.fetchBeers(filter)\n    appStore.isLoading = false\n  }\n})\n\nexport default appStore\n","import React from 'react'\nimport { view } from 'react-easy-state'\nimport SearchBar from 'material-ui-search-bar'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport appStore from './appStore'\n\nexport default view(() => (\n  <div className='searchbar'>\n    <SearchBar\n      onRequestSearch={appStore.fetchBeers}\n      placeholder='Add some food ...'\n    />\n    {appStore.isLoading && <LinearProgress />}\n  </div>\n))\n","import React, { Component } from 'react'\nimport { view, store } from 'react-easy-state'\nimport Card from '@material-ui/core/Card'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport CardContent from '@material-ui/core/CardContent'\n\nclass Beer extends Component {\n  store = store({ details: false });\n\n  toggleDetails = () => (this.store.details = !this.store.details);\n\n  render () {\n    const {\n      name,\n      image_url: imageUrl,\n      food_pairing: foodPairing,\n      description\n    } = this.props\n    const { details } = this.store\n\n    return (\n      <Card onClick={this.toggleDetails} className='beer'>\n        {!details && <CardMedia image={imageUrl} className='media' />}\n        <CardContent>\n          <h3>{name}</h3>\n          {details ? (\n            <p>{description}</p>\n          ) : (\n            <ul>{foodPairing.map(food => <li key={food}>{food}</li>)}</ul>\n          )}\n        </CardContent>\n      </Card>\n    )\n  }\n}\n\nexport default view(Beer)\n","import React from 'react'\nimport { view } from 'react-easy-state'\nimport appStore from './appStore'\nimport Beer from './Beer'\n\nexport default view(() => (\n  <div className='beerlist'>\n    {!appStore.beers.length ? (\n      <h3>No matching beers found!</h3>\n    ) : (\n      appStore.beers.map(beer => <Beer key={beer.name} {...beer} />)\n    )}\n  </div>\n))\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n","import React, { Fragment } from 'react'\nimport NavBar from './NavBar'\nimport BeerList from './BeerList'\n\n// if a component does not use any store, it doesn't have to be wrapped with view()\n// it is safer to wrap everything with view() until you get more comfortable with Easy State\nexport default () => (\n  <Fragment>\n    <NavBar />\n    <BeerList />\n  </Fragment>\n)\n"],"sourceRoot":""}