{"version":3,"sources":["../../../dist/es.es6.js","appStore.js","Contact.jsx","ContactCreator.jsx","App.jsx","index.js"],"names":["global","__webpack_require__","d","__webpack_exports__","view","_Users_miklosbertalan_react_easy_state_examples_contacts_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","_Users_miklosbertalan_react_easy_state_examples_contacts_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_Users_miklosbertalan_react_easy_state_examples_contacts_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__","_Users_miklosbertalan_react_easy_state_examples_contacts_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_miklosbertalan_react_easy_state_examples_contacts_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","_Users_miklosbertalan_react_easy_state_examples_contacts_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_5__","_Users_miklosbertalan_react_easy_state_examples_contacts_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__","_Users_miklosbertalan_react_easy_state_examples_contacts_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_7__","react__WEBPACK_IMPORTED_MODULE_8__","_nx_js_observer_util__WEBPACK_IMPORTED_MODULE_9__","globalObj","tasks","Set","isStopped","batchCallbacks","fn","_len","arguments","length","args","Array","_key","batchedArgs","map","arg","_len2","_key2","batch","apply","this","forEach","runTask","clear","task","window","setTimeout","setInterval","requestAnimationFrame","requestIdleCallback","Promise","prototype","then","catch","WebSocket","method","obj","descriptor","Object","getOwnPropertyDescriptor","newDescriptor","assign","set","value","batched","_len3","_key3","call","defineProperty","batchMethod","COMPONENT","Symbol","DUMMY_STATE","Comp","rawDevtool","undefined","devtool","isStatelessComp","isReactComponent","BaseComp","operation","Component","ReactiveHOC","_BaseComp","props","context","_this","state","updater","setState","render","scheduler","add","delete","debugger","lazy","key","nextProps","nextState","type","renderType","keys","nextKeys","some","oldProps","_get2","stores","component","filter","mapStateToStores","concat","displayName","name","_arr","_i","appStore","store","contacts","addContact","contact","email","push","deleteContact","idx","indexOf","splice","Contact","_ref","classCallCheck","possibleConstructorReturn","getPrototypeOf","onEdit","compStore","editing","onDelete","onSave","currentContact","onCancel","onChange","ev","target","_this$compStore","react_default","a","createElement","className","autoFocus","onClick","ContactCreator","newContact","placeholder","src_Contact","src_ContactCreator","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.fd1372ba.chunk.js","sourcesContent":["import _toConsumableArray from \"/Users/miklosbertalan/react-easy-state/examples/contacts/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/miklosbertalan/react-easy-state/examples/contacts/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/miklosbertalan/react-easy-state/examples/contacts/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/miklosbertalan/react-easy-state/examples/contacts/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/miklosbertalan/react-easy-state/examples/contacts/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"/Users/miklosbertalan/react-easy-state/examples/contacts/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"/Users/miklosbertalan/react-easy-state/examples/contacts/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/miklosbertalan/react-easy-state/examples/contacts/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport { Component } from 'react';\nimport { observe, unobserve, raw, isObservable } from '@nx-js/observer-util';\nexport { observable as store } from '@nx-js/observer-util';\nvar tasks = new Set();\nvar isStopped = false;\n\nfunction _add(task) {\n  if (isStopped) {\n    tasks.add(task);\n  } else {\n    runTask(task);\n  }\n}\n\nfunction remove(task) {\n  tasks.delete(task);\n} // this replaces the passed function with a function\n// that batches all of its callback arguments\n\n\nfunction batchCallbacks(fn) {\n  return function batchedCallbacks() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var batchedArgs = args.map(function (arg) {\n      return typeof arg === 'function' ? function () {\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n\n        return batch(arg, args);\n      } : arg;\n    });\n    return fn.apply(this, batchedArgs);\n  };\n} // bathes obj.onevent = fn like calls\n\n\nfunction batchMethod(obj, method) {\n  var descriptor = Object.getOwnPropertyDescriptor(obj, method);\n  var newDescriptor = Object.assign({}, descriptor, {\n    set: function set(value) {\n      var batched = typeof value === 'function' ? function () {\n        for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          args[_key3] = arguments[_key3];\n        }\n\n        return batch(value, args);\n      } : value;\n      return descriptor.set.call(this, batched);\n    }\n  });\n  Object.defineProperty(obj, method, newDescriptor);\n} // this runs the passed function and delays all re-renders\n// until the function is finished running\n\n\nfunction batch(fn, args) {\n  try {\n    isStopped = true;\n    return fn.apply(this, args);\n  } finally {\n    tasks.forEach(runTask);\n    tasks.clear();\n    isStopped = false;\n  }\n}\n\nfunction runTask(task) {\n  task();\n} // try to find the global object\n// it is window in the DOM and global in NodeJS and React Native\n\n\nvar globalObj;\n\nif (typeof window !== 'undefined') {\n  globalObj = window;\n} else if (typeof global !== 'undefined') {\n  globalObj = global;\n} // do a sync batching for the most common task sources\n// this should be removed when React's own batching is improved in the future\n\n\nif (globalObj) {\n  globalObj.setTimeout = batchCallbacks(globalObj.setTimeout);\n  globalObj.setInterval = batchCallbacks(globalObj.setInterval);\n\n  if (globalObj.requestAnimationFrame) {\n    globalObj.requestAnimationFrame = batchCallbacks(globalObj.requestAnimationFrame);\n  }\n\n  if (globalObj.requestIdleCallback) {\n    globalObj.requestIdleCallback = batchCallbacks(globalObj.requestIdleCallback);\n  } // eslint-disable-next-line\n\n\n  Promise.prototype.then = batchCallbacks(Promise.prototype.then); // eslint-disable-next-line\n\n  Promise.prototype.catch = batchCallbacks(Promise.prototype.catch); // this batches websocket event handlers\n\n  if (globalObj.WebSocket) {\n    var websocketHandlers = ['onopen', 'onmessage', 'onerror', 'onclose'];\n    websocketHandlers.forEach(function (method) {\n      return batchMethod(globalObj.WebSocket.prototype, method);\n    });\n  }\n} // DOM event handlers and HTTP event handlers don't have to be batched\n// event handlers are batched by React\n// HTTP event handlers are usually wrapped by Promises, which is covered above\n\n\nvar COMPONENT = Symbol('owner component');\nvar DUMMY_STATE = {};\n\nfunction view(Comp) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      rawDevtool = _ref.devtool;\n\n  var isStatelessComp = !(Comp.prototype && Comp.prototype.isReactComponent);\n  var BaseComp = isStatelessComp ? Component : Comp;\n  var devtool = rawDevtool ? function (operation) {\n    return rawDevtool(Object.assign({\n      Component: Comp\n    }, operation));\n  } : undefined; // return a HOC which overwrites render, shouldComponentUpdate and componentWillUnmount\n  // it decides when to run the new reactive methods and when to proxy to the original methods\n\n  var ReactiveHOC =\n  /*#__PURE__*/\n  function (_BaseComp) {\n    _inherits(ReactiveHOC, _BaseComp);\n\n    function ReactiveHOC(props, context) {\n      var _this;\n\n      _classCallCheck(this, ReactiveHOC);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(ReactiveHOC).call(this, props, context));\n      _this.state = _this.state || {};\n      _this.state[COMPONENT] = _assertThisInitialized(_assertThisInitialized(_this)); // run a dummy setState to schedule a new render, avoid forceUpdate\n\n      var updater = function updater() {\n        return _this.setState(DUMMY_STATE);\n      }; // create a reactive render for the component\n\n\n      _this.render = observe(_this.render, {\n        scheduler: {\n          add: function add() {\n            return _add(updater);\n          },\n          delete: function _delete() {\n            return remove(updater);\n          }\n        },\n        debugger: devtool,\n        lazy: true\n      });\n      return _this;\n    }\n\n    _createClass(ReactiveHOC, [{\n      key: \"render\",\n      value: function render() {\n        return isStatelessComp ? Comp(this.props, this.context) : _get(_getPrototypeOf(ReactiveHOC.prototype), \"render\", this).call(this);\n      } // react should trigger updates on prop changes, while easyState handles store changes\n\n    }, {\n      key: \"shouldComponentUpdate\",\n      value: function shouldComponentUpdate(nextProps, nextState) {\n        var props = this.props,\n            state = this.state; // respect the case when user prohibits updates\n\n        if (_get(_getPrototypeOf(ReactiveHOC.prototype), \"shouldComponentUpdate\", this) && !_get(_getPrototypeOf(ReactiveHOC.prototype), \"shouldComponentUpdate\", this).call(this, nextProps, nextState)) {\n          devtool && devtool({\n            type: 'render',\n            renderType: 'blocked'\n          });\n          return false;\n        } // return true if it is a reactive render or state changes\n\n\n        if (state !== nextState) {\n          devtool && devtool({\n            type: 'render',\n            renderType: 'reactive'\n          });\n          return true;\n        } // the component should update if any of its props shallowly changed value\n\n\n        var keys = Object.keys(props);\n        var nextKeys = Object.keys(nextProps);\n\n        if (nextKeys.length !== keys.length || nextKeys.some(function (key) {\n          return props[key] !== nextProps[key];\n        })) {\n          devtool && devtool({\n            type: 'render',\n            renderType: 'normal',\n            props: nextProps,\n            oldProps: props\n          });\n          return true;\n        }\n\n        return false;\n      } // add a custom deriveStoresFromProps lifecyle method\n\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        // call user defined componentWillUnmount\n        if (_get(_getPrototypeOf(ReactiveHOC.prototype), \"componentWillUnmount\", this)) {\n          _get(_getPrototypeOf(ReactiveHOC.prototype), \"componentWillUnmount\", this).call(this);\n        } // clean up memory used by Easy State\n\n\n        unobserve(this.render);\n      }\n    }], [{\n      key: \"getDerivedStateFromProps\",\n      value: function getDerivedStateFromProps(props, state) {\n        if (_get(_getPrototypeOf(ReactiveHOC), \"deriveStoresFromProps\", this)) {\n          var _get2;\n\n          // inject all local stores and let the user mutate them directly\n          var stores = mapStateToStores(state);\n\n          (_get2 = _get(_getPrototypeOf(ReactiveHOC), \"deriveStoresFromProps\", this)).call.apply(_get2, [this, props].concat(_toConsumableArray(stores)));\n        } // respect user defined getDerivedStateFromProps\n\n\n        if (_get(_getPrototypeOf(ReactiveHOC), \"getDerivedStateFromProps\", this)) {\n          return _get(_getPrototypeOf(ReactiveHOC), \"getDerivedStateFromProps\", this).call(this, props, state);\n        }\n\n        return null;\n      }\n    }]);\n\n    return ReactiveHOC;\n  }(BaseComp);\n\n  ReactiveHOC.displayName = Comp.displayName || Comp.name; // static props are inherited by class components,\n  // but have to be copied for function components\n\n  if (isStatelessComp) {\n    var _arr = Object.keys(Comp);\n\n    for (var _i = 0; _i < _arr.length; _i++) {\n      var key = _arr[_i];\n      ReactiveHOC[key] = Comp[key];\n    }\n  }\n\n  return ReactiveHOC;\n}\n\nfunction mapStateToStores(state) {\n  // find store properties and map them to their none observable raw value\n  // to do not trigger none static this.setState calls\n  // from the static getDerivedStateFromProps lifecycle method\n  var component = state[COMPONENT];\n  return Object.keys(component).map(function (key) {\n    return component[key];\n  }).filter(isObservable).map(raw);\n}\n\nexport { view, batch };","import { store } from 'react-easy-state'\n\n// store the central data and logic of the application in a global app store\n// use 'appStore' instead of 'this' in the store methods to make them passable as callbacks\nconst appStore = store({\n  contacts: [],\n  addContact (contact) {\n    contact.name = contact.name || 'Placeholder'\n    contact.email = contact.email || 'Placeholder'\n    appStore.contacts.push(contact)\n  },\n  deleteContact (contact) {\n    const idx = appStore.contacts.indexOf(contact)\n    appStore.contacts.splice(idx, 1)\n  }\n})\n\nexport default appStore\n","import React, { Component } from 'react'\nimport { view, store } from 'react-easy-state'\nimport appStore from './appStore'\n\nclass Contact extends Component {\n  constructor ({ contact }) {\n    super()\n\n    // save internal utility data in component store instead of the global store\n    // editing is boolean meta flag, which indicates if the contact is currently edited\n    // currentContact is a temporary state of the contact during editing, which can be saved or cancelled\n    this.compStore = store({\n      currentContact: Object.assign({}, contact),\n      editing: false\n    })\n  }\n\n  onEdit = () => {\n    this.compStore.editing = true\n  };\n\n  onDelete = () => {\n    appStore.deleteContact(this.props.contact)\n  };\n\n  // transfer finalized changes from the component store to the app store\n  onSave = () => {\n    // mutating the store with Object.assign is possible, but it is generally hard to reason about and debug\n    Object.assign(this.props.contact, this.compStore.currentContact)\n    this.compStore.editing = false\n  };\n\n  // cancel changes by reverting to data from the main store\n  onCancel = () => {\n    // mutating the store with Object.assign is possible, but it is generally hard to reason about and debug\n    Object.assign(this.compStore.currentContact, this.props.contact)\n    this.compStore.editing = false\n  };\n\n  onChange = ev => {\n    this.compStore.currentContact[ev.target.name] = ev.target.value\n  };\n\n  // render is triggered whenever the relevant parts of the component store, app store or props change\n  render () {\n    const { onChange, onSave, onCancel, onEdit, onDelete } = this\n    const { currentContact, editing } = this.compStore\n    const { contact } = this.props\n\n    if (!editing) {\n      return (\n        <tr className='contact-display'>\n          <td>{contact.name}</td>\n          <td>{contact.email}</td>\n          <td>\n            <button onClick={onEdit}>\n              <i className='zmdi zmdi-edit' />\n            </button>\n            <button onClick={onDelete}>\n              <i className='zmdi zmdi-delete' />\n            </button>\n          </td>\n        </tr>\n      )\n    }\n\n    return (\n      <tr className='contact-editor'>\n        <td>\n          <input\n            name='name'\n            value={currentContact.name}\n            onChange={onChange}\n            autoFocus\n          />\n        </td>\n        <td>\n          <input\n            name='email'\n            value={currentContact.email}\n            onChange={onChange}\n          />\n        </td>\n        <td>\n          <button onClick={onSave}>\n            <i className='zmdi zmdi-save' />\n          </button>\n          <button onClick={onCancel}>\n            <i className='zmdi zmdi-close' />\n          </button>\n        </td>\n      </tr>\n    )\n  }\n}\n\n// wrap the component with view() before exporting it\nexport default view(Contact)\n","import React, { Component } from 'react'\nimport { view, store } from 'react-easy-state'\nimport appStore from './appStore'\n\nclass ContactCreator extends Component {\n  // save internal utility data in component store, instead of the app store\n  // newContact is the skeleton for the next contact before it is added to the list\n  compStore = store({\n    newContact: { name: '', email: '' }\n  });\n\n  // transfer finalized contact from the component store to the app store\n  addContact = () => {\n    appStore.addContact(this.compStore.newContact)\n    this.compStore.newContact = { name: '', email: '' }\n  };\n\n  onChange = ev => {\n    const { newContact } = this.compStore\n    newContact[ev.target.name] = ev.target.value\n  };\n\n  // render is triggered whenever the relevant parts of the component store or app store change\n  render () {\n    const { addContact, onChange } = this\n    const { newContact } = this.compStore\n\n    return (\n      <tr className='contact-creator'>\n        <td>\n          <input\n            name='name'\n            value={newContact.name}\n            onChange={onChange}\n            placeholder='Contact name...'\n          />\n        </td>\n        <td>\n          <input\n            name='email'\n            value={newContact.email}\n            onChange={onChange}\n            placeholder='Contact email...'\n          />\n        </td>\n        <td>\n          <button onClick={addContact}>Add Contact</button>\n        </td>\n      </tr>\n    )\n  }\n}\n\n// wrap the component with view() before exporting it\nexport default view(ContactCreator)\n","import React from 'react'\nimport { view } from 'react-easy-state'\nimport Contact from './Contact'\nimport ContactCreator from './ContactCreator'\nimport appStore from './appStore'\n\n// this rerenders whenever the appStore.contacts array changes (elements pushed or deleted)\nfunction App () {\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Email</th>\n          <th>Action</th>\n        </tr>\n      </thead>\n      <tbody>\n        {appStore.contacts.map(contact => (\n          <Contact contact={contact} key={contact.email} />\n        ))}\n        <ContactCreator />\n      </tbody>\n    </table>\n  )\n}\n\n// wrap the component with view() before exporting it\nexport default view(App)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}