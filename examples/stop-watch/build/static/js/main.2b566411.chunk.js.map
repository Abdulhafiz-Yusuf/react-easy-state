{"version":3,"sources":["clock.js","App.jsx","index.js"],"names":["clock","store","ticks","start","intervalId","setInterval","stop","clearInterval","time","moment","millisecond","seconds","format","fraction","undefined","toggle","isTicking","reset","view","label","onClick","ReactDOM","render","App","document","getElementById"],"mappings":"mPAIMA,EAAQC,YAAM,CAClBC,MAAO,EACPC,MAFkB,WAGhBH,EAAMI,WAAaC,aAAY,kBAAML,EAAME,UAAS,KAEtDI,KALkB,WAMhBN,EAAMI,WAAaG,cAAcP,EAAMI,aAEzC,WACE,IAAMI,EAAOC,IAAO,GAAGC,YAA0B,GAAdV,EAAME,OAEzC,MAAO,CACLS,QAASH,EAAKI,OAAO,SACrBC,SAAUL,EAAKI,OAAO,QAG1B,gBACE,YAA4BE,IAArBd,EAAMI,YAEfW,OAnBkB,WAoBhBf,EAAMgB,UAAYhB,EAAMM,OAASN,EAAMG,SAEzCc,MAtBkB,WAuBhBjB,EAAME,MAAQ,EACdF,EAAMM,UAIKN,IC3BAkB,eAAK,WAAO,IACjBV,EAAmCR,EAAnCQ,KAAMO,EAA6Bf,EAA7Be,OAAQE,EAAqBjB,EAArBiB,MAChBE,EADqCnB,EAAdgB,UACH,OAAS,QAEnC,OACE,6BACE,6BACGR,EAAKG,QACN,+BAAQH,EAAKK,WAEf,4BAAQO,QAASL,GAASI,GAC1B,4BAAQC,QAASH,GAAjB,aCXNI,IAASC,OAAO,kBAACC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.2b566411.chunk.js","sourcesContent":["import { store } from '@risingstack/react-easy-state';\nimport moment from 'moment';\n\n// use 'clock' instead of 'this' in the store methods to make them passable as callbacks\nconst clock = store({\n  ticks: 0,\n  start() {\n    clock.intervalId = setInterval(() => clock.ticks++, 10);\n  },\n  stop() {\n    clock.intervalId = clearInterval(clock.intervalId);\n  },\n  get time() {\n    const time = moment(0).millisecond(clock.ticks * 10);\n\n    return {\n      seconds: time.format('mm:ss'),\n      fraction: time.format('SS'),\n    };\n  },\n  get isTicking() {\n    return clock.intervalId !== undefined;\n  },\n  toggle() {\n    clock.isTicking ? clock.stop() : clock.start();\n  },\n  reset() {\n    clock.ticks = 0;\n    clock.stop();\n  },\n});\n\nexport default clock;\n","import React from 'react';\nimport { view } from '@risingstack/react-easy-state';\nimport clock from './clock';\n\n// this is re-rendered whenever the relevant parts of the used data stores change\nexport default view(() => {\n  const { time, toggle, reset, isTicking } = clock;\n  const label = isTicking ? 'Stop' : 'Start';\n\n  return (\n    <div>\n      <div>\n        {time.seconds}\n        <small>{time.fraction}</small>\n      </div>\n      <button onClick={toggle}>{label}</button>\n      <button onClick={reset}>Reset</button>\n    </div>\n  );\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}